/*
 * Copyright (C) 2007-2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/color>
#include <cc/meta/yason>

namespace cc {
namespace toki {

using namespace cc::meta;

class Palette;

class Style: public MetaObject
{
public:
    static Ref<Style> create();

    string ruleName() const { return ruleName_; }
    int rule() const { return rule_; }
    color ink() const { return ink_; }
    color paper() const { return paper_; }
    bool bold() const { return bold_; }
    bool italic() const { return italic_; }

private:
    friend class Palette;

    Style();
    void realize() override;

    string ruleName_;
    int rule_;
    color ink_;
    color paper_;
    bool bold_;
    bool italic_;
};

}} // namespace cc::toki
