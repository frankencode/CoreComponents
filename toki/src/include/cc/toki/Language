/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/syntax/SyntaxDefinition>
#include <cc/glob/Pattern>

namespace cc {
namespace toki {

using namespace cc::syntax;
using namespace cc::glob;

class Language: public Object
{
public:
    string displayName() const { return displayName_; }
    string name() const { return name_; }
    Pattern pathPattern() const { return pathPattern_; }
    const SyntaxDefinition *highlightingSyntax() const { return highlightingSyntax_; }
    const SyntaxDefinition *discoverySyntax() const { return discoverySyntax_; }
    const SyntaxDefinition *foldingSyntax() const { return foldingSyntax_; }

protected:
    Language(
        const string &displayName,
        const Pattern &pathPattern,
        const SyntaxDefinition *highlightingSyntax,
        const SyntaxDefinition *discoverySyntax = nullptr,
        const SyntaxDefinition *foldingSyntax = nullptr
    );

private:
    Language();

    string displayName_;
    string name_;
    Pattern pathPattern_;
    Ref<const SyntaxDefinition> highlightingSyntax_;
    Ref<const SyntaxDefinition> discoverySyntax_;
    Ref<const SyntaxDefinition> foldingSyntax_;
};

}} // namespace cc::toki
