/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/exceptions>

namespace cc {
namespace net {

/** \class NetworkError cc/net/exceptions
  * \brief Networking related system error
  */
class NetworkError: public SystemError
{
public:
    NetworkError(int errorCode);
};

/** \class HostUnreachable cc/net/exceptions
  * \brief An earlier datagram could not be delivered
  *
  * \see DatagramSocket::recvFrom()
  */
class HostUnreachable: public NetworkError
{
public:
    HostUnreachable();
};

/** \class ConnectionRefused cc/net/exceptions
  * \brief No-one is listening on the remote address
  */
class ConnectionRefused: public NetworkError
{
public:
    ConnectionRefused();
};

/** \class NetworkUnreachable cc/net/exceptions
  * \brief Network is unreachable
  */
class NetworkUnreachable: public NetworkError
{
public:
    NetworkUnreachable();
};

/** \class ConnectionTimeoute cc/net/exceptions
  * \brief Timeout while attempting connection
  * The networking layer reached its maximum timeout for attempting connection to a peer.
  * The remote server may overloaded and unable to accept the connection.
  */
class ConnectionTimeout: public NetworkError
{
public:
    ConnectionTimeout();
};

/** \class HostNameResolutionError cc/net/exceptions
  * \brief Failed to resolve a host name
  */
class HostNameResolutionError: public UsageError
{
public:
    HostNameResolutionError(const String &message);
};

}} // namespace cc::net
