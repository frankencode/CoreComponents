/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/net/NetworkInterface>

namespace cc {
namespace net {

/** \class NetworkState cc/net/NetworkState
  * \brief Simplified network configuration state
  */
class NetworkState: public Object
{
public:
    /** Query the current network configuration state
      * \return new object instance
      */
    static Ref<NetworkState> query(const String &interfaceName = "");

    /// name of the network interface
    String interfaceName() const { return interfaceName_; }

    /// network interface
    const NetworkInterface *interface() const { return interface_; }

    /// size of the network mask (IPv4 only)
    int networkMask() const { return networkMask_; }

    /// configured address
    SocketAddress address() const { return address_; }

    /// configured gateway
    SocketAddress gateway() const { return gateway_; }

private:
    NetworkState(const String &interface);

    String interfaceName_;
    Ref<NetworkInterface> interface_;
    int networkMask_;
    SocketAddress address_;
    SocketAddress gateway_;
};

}} // namespace cc::net
