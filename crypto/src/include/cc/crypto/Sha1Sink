/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/crypto/CryptoHashSink>

namespace cc {
namespace crypto {

/** \class Sha1Sink Sha1Sink cc/crypto/Sha1Sink
  * \brief Secure Hash 1: a one-way hash function
  */
class Sha1Sink: public CryptoHashSink
{
public:
    enum {
        Size = 20 ///< size of the hash sum in bytes
    };

    /** Open a new SHA-1 computing hash sink
      * \return new object instance
      */
    static Ref<Sha1Sink> open();

    Ref<CryptoHashSink> copy() const override;

    void write(const CharArray *data) override;
    String finish() override;

private:
    Sha1Sink();
    Sha1Sink(const Sha1Sink *other);

    void consume();

    String h_;
    String m_;
    String w_;
    int j_;
    uint64_t l_;
};

String sha1(const CharArray *data);

}} // namespace cc::crypto
