/*
 * Copyright (C) 2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Object>

namespace cc::build {

class Message: public Object
{
public:
    enum class Type {
        Job,
        SuspensionReport,
        ResumptionReport,
        TerminationRequest,
        TerminationReply
    };

    Message() = default;

    Type type() const { return me().type_; }

protected:
    struct State: public Object::State
    {
        explicit State(Type type):
            type_{type}
        {}

        Type type_;
    };

    explicit Message(State *newState):
        Object{newState}
    {}

    const State &me() const { return Object::me.as<State>(); }
};

} // namespace cc::build
