/*
 * Copyright (C) 2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/build/Module>

namespace cc::build {

class BuildPlan;
class JobScheduler;

class ImportManager final: public Object
{
public:
    ImportManager();

    void gatherModules(const String &importPrefix);

    static String moduleName(const String &importPrefix, const String &source);

    bool registerModule(const String &name, const String &source, Out<Module> module);
    void registerInclude(const String &name, const String &include);

    bool lookupModule(const String &name, Out<Module> module);

    String cachePrefix() const;

    static String cachePath(const String &name);

    bool compileHeaderUnit(JobScheduler &scheduler, const BuildPlan &plan, const String &source, Out<String> cachePath);

    bool compileInterfaceUnit(JobScheduler &scheduler, const BuildPlan &plan, const String &name, Out<String> cachePath);

protected:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc::build
