/*
 * Copyright (C) 2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/can/CanFeed>
#include <cc/can/CanNode>

namespace cc {
namespace can {

class CanNodeFeed: public CanFeed
{
public:
    class Instance: public CanFeed::Instance
    {
    public:
        void writeFrame(const CanFrame &frame) override
        {
            sink_->writeFrame(frame);
        }

    private:
        friend class CanNodeFeed;

        Instance(const CanMedia &sink):
            sink_{sink}
        {}

        CanMedia sink_;
    };

    CanNodeFeed(const CanMedia &sink):
        CanFeed{new Instance{sink}}
    {}
};

}} // namespace cc::can
