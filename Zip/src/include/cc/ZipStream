/*
 * Copyright (C) 2007-2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Stream>
#include <cc/Exception>

namespace cc {

class ZipFile;

/** \class ZipStream cc/ZipStream
  * \ingroup zip
  * \brief Read a file within a ZIP archive
  */
class ZipStream: public Stream
{
private:
    friend class ZipFile;

    class State;

    explicit ZipStream(const String &path);

    State *operator->();
};

/** \class ZipError cc/ZipStream
  * \ingroup zip
  * \brief Something went wrong processing a ZIP archive
  */
class ZipError: public Exception
{
public:
    ZipError(int errorCode, const String &zipPath):
        errorCode_{errorCode},
        zipPath_{zipPath}
    {}

    ~ZipError() throw() {}

    int errorCode() const { return errorCode_; }
    String zipPath() const { return zipPath_; }

    String message() const override;

private:
    int errorCode_ { 0 };
    String zipPath_;
};

} // namespace cc
