/*
 * Copyright (C) 2007-2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/http/HttpGenerator>

namespace cc {
namespace http {

class DeliveryWorker;

class HttpResponseGenerator: public HttpGenerator
{
public:
    static Ref<HttpResponseGenerator> create(HttpConnection *client);

    void setStatus(int statusCode, const string &reasonPhrase = "");
    void setNodeVersion(const string &nodeVersion);

private:
    friend class DeliveryWorker;

    HttpResponseGenerator(HttpConnection *client);

    Header *header() const { return header_; }
    bool delivered() const { return headerWritten_; }
    int statusCode() const { return statusCode_; }
    size_t bytesWritten() const;

    void polishHeader() override;
    void writeFirstLine(Format &sink) override;

    int statusCode_;
    string reasonPhrase_;
    string nodeVersion_;
};

}} // namespace cc::http
