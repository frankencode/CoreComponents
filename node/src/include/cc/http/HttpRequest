/*
 * Copyright (C) 2007-2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/http/HttpMessage>

namespace cc {
namespace http {

class HttpServerConnection;

class HttpRequest: public HttpMessage
{
public:
    static Ref<HttpRequest> create() { return new HttpRequest; }

    string method() const { return method_; }
    string uri() const { return uri_; }
    string query() const { return uri_->select(uri_->scan('?') + 1, uri_->count()); }
    string version() const { return version_; }
    int majorVersion() const { return majorVersion_; }
    int minorVersion() const { return minorVersion_; }
    string host() const { return host_; }

    string line() const { return line_; }
    double time() const { return time_; }

private:
    friend class HttpServerConnection;
    HttpRequest() {}

    string method_;
    string uri_;
    string version_;
    int majorVersion_;
    int minorVersion_;
    string host_;

    string line_;
    double time_;

    Ref<Stream> payload_;
};

}} // namespace cc::http
