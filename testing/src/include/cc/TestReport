/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/String>
#include <cc/Object>

namespace cc {

class TestCase;
class TestSuite;

class TestReport: public Object::State
{
public:
    virtual bool captureOutput() const = 0;

    virtual void beginTestSuite(const TestSuite &testSuite) = 0;
    virtual void beginTestCase(const TestCase &testCase) = 0;
    virtual void verify(const TestCase &testCase, bool condition, const String &message, const String &codePath, int codeLine) = 0;
    virtual void error(const TestCase &testCase, const String &type, const String &message) = 0;
    virtual void endTestCase(const TestCase &testCase, const String &outText = "", const String &errText = "") = 0;
    virtual void skipTestCase(const TestCase &testCase) = 0;
    virtual void endTestSuite(const TestSuite &testSuite) = 0;
};

} // namespace cc
