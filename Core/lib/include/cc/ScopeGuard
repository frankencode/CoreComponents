/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Function>

namespace cc {

/** \class ScopeGuard cc/ScopeGuard
  * \ingroup basics
  * \brief Call cleanup function on scope exit
  */
class ScopeGuard
{
public:
    /** Post scope guard \a cleanup function
      */
    ScopeGuard(Function<void()> &&cleanup): cleanup_{std::move(cleanup)} {}

    /** Disband scope guard: call \a cleanup function
      */
    ~ScopeGuard() { cleanup_(); }

private:
    Function<void()> cleanup_;
};

} // namespace cc
