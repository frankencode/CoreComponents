/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \class StreamTap cc/StreamTap
  * \ingroup streams
  * \brief Bi-directional traffic redirection and duplication
  * \see StreamMultiplexer
  */
class StreamTap final: public Stream
{
public:
    /** Create a new stream tap
      * \param stream Data stream to tap into
      * \param inputTap %Input tap: receives everything read from \a stream as a write (pass Stream{} to omit tapping into the reads)
      * \param outputTap %Output tap: receives everything written to \a stream as a write (pass Stream{} to omit tapping into the writes)
      */
    StreamTap(const Stream &stream, const Stream &inputTap, const Stream &outputTap);

private:
    struct State;
};

} // namespace cc
