/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

namespace cc {

/** \class Guard cc/Guard
  * \brief %Mutex guard
  * \tparam T %Mutex type
  */
template<class T>
class Guard final
{
public:
    /** Post guard: acquire \a mutex
      */
    explicit Guard(T &mutex): mutex_{mutex} { mutex_.acquire(); }

    /** Disband guard: release \a mutex
      */
    ~Guard() { if (onDuty_) mutex_.release(); }

    /** Unlock the mutex early
      */
    void dismiss()
    {
        onDuty_ = false;
        mutex_.release();
    }

private:
    T &mutex_;
    bool onDuty_ { true };
};

} // namespace cc
