/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/SystemError>
#include <cc/Set>
#include <cc/Object>

struct group;

namespace cc {

class UserInfo;

/** \class GroupInfo cc/GroupInfo
  * \ingroup sysinfo
  * \brief Query information about system groups
  */
class GroupInfo: public Object
{
public:
    /** Lookup group information by group ID
      * \param id System group ID
      */
    explicit GroupInfo(gid_t id);

    /** Lookup group information by group name
      * \param name GroupInfo name
      */
    explicit GroupInfo(const String &name);

    /** Group ID
      */
    int id() const { return me().id; }

    /** Group name
      */
    String name() const { return me().name; }

    /** Get login names of the members of this group (excluding the group owner)
      */
    Set<String> members() const { return me().members; }

    /** Check group membership for \a user
      */
    bool checkMembership(const UserInfo &user) const;

private:
    struct State: public Object::State
    {
        State(const struct group &info);

        int id;
        String name;
        Set<String> members;
    };

    const State &me() const { return Object::me.as<State>(); }
};

} // namespace cc
