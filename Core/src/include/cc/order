/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <compare>

namespace cc {

/** Default sort order based on ordering operator<=>
  */
struct DefaultOrder
{
    template<class A, class B>
    static std::strong_ordering compare(const A &a, const B &b)
    {
        return a <=> b;
    }
};

/** Reverse sort order based on ordering operator<=>
  */
struct ReverseOrder
{
    template<class A, class B>
    static std::strong_ordering compare(const A &a, const B &b)
    {
        return b <=> a;
    }
};

} // namespace cc
