/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Object>

namespace cc {

/** \class Singleton cc/Singleton
  * \ingroup objects
  * \brief %Process-wide singletons
  */
class ThreadLocalSingleton: public Object
{
protected:
    /** Get access to the singleton instance
      */
    template<class T>
    static T *instance()
    {
        thread_local Handle<T> handle { new T };
        return &handle();
    }

    /** Create a null singleton
      */
    ThreadLocalSingleton() = default;

    /** Initialize singleton object with instance \a state
      */
    explicit ThreadLocalSingleton(State *state):
        Object{state, Alias{}}
    {}
};

} // namespace cc
