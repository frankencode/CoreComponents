/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Dialog>

namespace cc {

/** \class TimePicker cc/TimePicker
  * \ingroup ui
  * \brief %Dialog to select a time of the day
  * \todo improve keyboard navigation (possibly focus support needed for TextButton)
  * \todo automatically allow to tab into keyboard input mode
  */
class TimePicker final: public Dialog
{
public:
    /** Create a primordial time picker
      */
    TimePicker();

    /** Create a new time picker showing \a hour and \a minute
      */
    TimePicker(int hour, int minute);

    /** Get a weak reference in \a self
      */
    TimePicker &associate(Out<TimePicker> self);

    TimePicker &hour(double newValue); ///< %Set hour [0..23]
    int hour() const; ///< Get hour [0..23]

    TimePicker &minute(double newValue); ///< %Set minute [0..59]
    int minute() const; ///< Get minute [0..59]

    TimePicker &onAccepted(Fun<void()> &&f); ///< %Handle input accepted event
    TimePicker &onRejected(Fun<void()> &&f); ///< %Handle input accepted event

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc
