/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/View>

namespace cc {

/** \class Pane cc/Pane
  * \ingroup ui
  * \brief A view contained in another view, e.g. inside a Flickable
  */
class Pane: public View
{
public:
    /** Create a primordial pane
      */
    Pane():
        View{onDemand<State>}
    {}

    /** Create a new pane of size (\a width, \a height)
      */
    Pane(double width, double height):
        View{new State}
    {
        size({width, height});
    }

    /** Get a weak reference in \a self
      */
    Pane &associate(Out<Pane> self);

protected:
    friend class Object;

    struct State: public View::State
    {
        State() = default;

        Size preferredSize() const override;
    };
};

} // namespace cc
