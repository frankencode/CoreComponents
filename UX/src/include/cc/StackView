/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/View>

namespace cc {

/** \class StackView cc/StackView
  * \ingroup ui
  * \brief View stack
  */
class StackView: public View
{
public:
    /** Create a primordial view stack
      */
    StackView();

    /** Create a new view stack of given size
      */
    StackView(double width, double height);

    /** Get a weak reference in \a self
      */
    StackView &associate(Out<StackView> self);

    /** Push a new view onto the stack
      */
    StackView &push(const View &view);

    /** Remove the current view from the stack
      */
    void pop();

    /** Go to the first view pushed onto the stack and remove all other views thereafter
      */
    void home();

    /** Current number of views
      */
    int count() const;

    /** %Set easing for push/pop transition
      */
    StackView &easing(const EasingCurve &easing, double duration);

protected:
    struct State;

    explicit StackView(CreateState onDemand);
    explicit StackView(State *newState);

    const View &carrier() const;

    State &me();
    const State &me() const;
};

} // namespace cc
