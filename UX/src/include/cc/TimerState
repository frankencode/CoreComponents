/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Timer>
#include <cc/Trigger>
#include <atomic>

namespace cc {

struct Timer::State final: public Object::State
{
    State(double interval):
        interval_{interval}
    {}

    double interval_;
    Trigger timeout_;
    mutable std::atomic<bool> isActive_ { false };
    double firstTime_ { 0 };
    double startTime_ { 0 };
    std::atomic<long> requestId_ { 0 };
};

} // namespace cc
