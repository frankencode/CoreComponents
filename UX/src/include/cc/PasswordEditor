/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/TextEditor>
#include <cc/Property>

namespace cc {

/** \class PasswordEditor cc/PasswordEditor
  * \ingroup ui
  * \brief %Password editor
  */
class PasswordEditor final: public TextEditor
{
public:
    /** Create a new password editor
      */
    explicit PasswordEditor(const String &bullet = "â€¢");

    /** Get the password
      */
    String password() const;

private:
    friend class Object;

    struct State: public TextEditor::State
    {
        State(const String &bullet);

        long count() const override;

        Range textToPasswordRange(Range range) const;

        String copy(Range range) const override;

        String text() const override;

        Range paste(Range range, const String &chunk) override;

        bool canUndo() const override;
        bool canRedo() const override;
        Range undo() override;
        Range redo() override;

        Property<String> text_;
        Property<String> password_;
        String bullet_;
    };

    State &me();
    const State &me() const;
};

} // namespace cc
