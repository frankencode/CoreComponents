/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Image>

namespace cc {

/** \class WebP cc/WebP
  * \ingroup ui
  * \brief Read and write WebP image files
  */
class WebP final: public Object
{
public:
    /** Check if \a data is a WebP file and optionally return its \a width and \a height (in pixel)
      */
    static bool detect(const Bytes &data, Out<int> width = None{}, Out<int> height = None{});

    /** Decode WebP image \a data
      */
    static Image decode(const Bytes &data);

    /** Decode WebP image \a data
      * \param image Target image (output is scaled to match the user-defined size)
      * \param data &WebP encoded data
      * \return true if image could be decoded successfully
      */
    static bool decodeInto(InOut<Image> image, const Bytes &data);

    /** WebP encode \a image (lossless mode)
      * \todo improve performance by using libwebp's advanced API
      */
    static void encode(const Stream &sink, const Image &image);
};

} // namespace cc
