/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Flickable>

namespace cc {

/** \class ListView cc/ListView
  * \ingroup ui
  * \brief %List view
  * A ListView shows a vertically scrollable list of items of various dimensions.
  * \todo Add support for item spacing.
  */
class ListView: public Flickable
{
public:
    /** Create a primordial list view
      */
    ListView();

    /** Create a new list view
      */
    explicit ListView(Out<ListView> self);

    /** Create a new list view of size (\a width, \a height)
      */
    ListView(double width, double height);

    /** Get a weak reference in \a self
      */
    ListView &associate(Out<ListView> self);

    /** Invoke custom initialization function \a f
      */
    ListView &populate(Fun<void(ListView)> &&f)
    {
        f(grab<ListView>());
        return *this;
    }

    View header() const; ///< Get the header
    ListView &header(const View &newValue); ///< %Set the header

    View footer() const; ///< Get the footer
    ListView &footer(const View &newValue); ///< %Set the footer

    double leadSpace() const; ///< Leading spacing if no header is present
    ListView &leadSpace(double newValue); ///< Set leading spacing

    double tailSpace() const; ///< Trailing spacing if no footer is present
    ListView &tailSpace(double newValue); ///< set trailing spacing

    void deplete(); ///< Remove all children (list items)

protected:
    class Pane;

    struct State: public Flickable::State
    {
        State();

        void deplete();

        void setHeader(const View &newValue);
        void setFooter(const View &newValue);

        Property<View> header;
        Property<View> footer;
        Property<double> leadSpace { sp(8) };
        Property<double> tailSpace { sp(8) };
    };

    explicit ListView(State *newState):
        Flickable{newState}
    {}

    explicit ListView(CreateState onDemand):
        Flickable{onDemand}
    {}

    State &me();
    const State &me() const;
};

} // namespace cc
