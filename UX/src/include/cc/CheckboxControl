/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/InputControl>

namespace cc {

/** \class CheckboxControl cc/SwitchControl
  * \ingroup ui
  * \brief %Checkbox control
  */
class CheckboxControl final: public InputControl
{
public:
    /** Create a primordial checkbox control
      */
    CheckboxControl();

    /** Get a weak reference in \a self
      */
    CheckboxControl &associate(Out<CheckboxControl> self);

    bool value() const; ///< Get current state
    CheckboxControl &value(bool newValue); ///< %Set current state

private:
    friend class Checkbox;

    struct State;

    /** Group this checkbox under another checkbox \a groupLeader
      */
    CheckboxControl &groupUnder(CheckboxControl &groupLeader);

    /** Tell if this checkbox is grouped under another checkbox
      */
    bool isGrouped() const;

    State &me();
    const State &me() const;
    State *operator->();
    const State *operator->() const;
};

} // namespace cc
