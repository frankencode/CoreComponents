/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/View>

namespace cc {

/** \class StackView cc/StackView
  * \ingroup ui
  * \brief Screen navigation stack
  */
class StackView final: public View
{
public:
    /** Create a primordial stack view
      */
    StackView();

    /** Create a new stack view and return a weak reference to it
      */
    explicit StackView(Out<StackView> self);

    /** Create a new stack view of given size and return a weak reference to it
      */
    StackView(double width, double height, Out<StackView> self = None{});

    /** Push a new screen onto the stack
      */
    StackView &push(View screen);

    /** Remove the current screen from the stack
      */
    void pop();

    /** Go to the first screen push onto the stack and remove all other screens thereafter
      */
    void home();

    /** %Set easing for screen transition
      */
    StackView &easing(const EasingCurve &easing, double duration);

    const View &carrier() const;

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc
