/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/InputControl>

namespace cc {

/** \class SliderControl cc/SliderControl
  * \ingroup ui
  * \brief %Slider control
  */
class SliderControl final: public InputControl
{
public:
    /** Create a primordial slider
      */
    SliderControl();

    /** Create a slider and return a copy of itself
      */
    explicit SliderControl(Out<SliderControl> self);

    double min() const; ///< Get the minimum slider value
    SliderControl &min(double newValue); ///< %Set the minimum slider value
    SliderControl &min(Definition<double> &&f); ///< Define the minimum slider value

    double max() const; ///< Get the maximum slider value
    SliderControl &max(double newValue); ///< %Set the maximum slider value
    SliderControl &max(Definition<double> &&f); ///< Define the maximum slider value

    double precision() const; ///< Get the precision
    SliderControl &precision(double newValue); ///< %Set the precision
    SliderControl &precision(Definition<double> &&f); ///< Define the precision

    double value() const; ///< Get the current slider value
    SliderControl &value(double newValue); ///< %Set the current slider value

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc
