/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/Control>

namespace cc {
namespace ui {

class TextRun;
class TextCursor;
class Timer;

class TextInput: public Control
{
    friend class Object;

public:
    Property<String> text;
    Property<Font> font;
    Property<Color> ink;
    Property<Size> margin;

    Point textPos() const;

protected:
    TextInput(View *parent = 0);
    ~TextInput();

private:
    Property<Ref<const TextRun>> textRun;
    Property<Ref<TextCursor>> textCursor;
    Property<int> textCursorOffset;

    void onTextEdited(const String &chunk, int start, int length) override;
    void onTextInput(const String &chunk);

    bool onPointerClicked(const PointerEvent *event) override;

    void paint() override;

    Ref<Timer> timer_;
};

}} // namespace cc::ui
