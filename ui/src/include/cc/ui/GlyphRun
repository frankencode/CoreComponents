/*
 * Copyright (C) 2017-2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/ScaledFont>
#include <cc/ui/Font>

namespace cc {
namespace ui {

class GlyphRun: public Object
{
public:
    static Ref<GlyphRun> typeSet(const String &text, const Font &font = Font(), const Point &origin = Point{});

    virtual String text() const = 0;
    virtual Font font() const = 0;

    virtual Point advance() const = 0;
    virtual Size size() const = 0;
    virtual int byteCount() const = 0;
    virtual int lineCount() const = 0;

    virtual Ref<GlyphRun> wrap(double maxWidth, TextAlign textAlign = TextAlign::Left, double lineHeight = 0, const TextWrapBehind &wrapBehind = textWrapBehindDefault) const = 0;
    virtual Ref<GlyphRun> elide(double maxWidth) const = 0;

    virtual Ref<GlyphRun> copy() const = 0;
};

}} // namespace cc::ui
