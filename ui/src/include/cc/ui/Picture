/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/View>
#include <cc/ui/Visual>

namespace cc {
namespace ui {

class Picture: public View
{
public:
    class Instance: public View::Instance
    {
    public:
        Property< Ref<Visual> > visual;

        bool isPainted() const override;

    private:
        friend class Picture;

        Instance(Visual *initialVisual = nullptr);
    };

    Picture():
        View{new Instance}
    {}

    Picture(Visual *visual):
        View{new Instance{visual}}
    {}

    Picture(Instance *instance):
        View{instance}
    {}

    Instance *operator->() const { return my<Instance>(); }
};

}} // namespace cc::ui
