/*
 * Copyright (C) 2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/FontFace>
#include <cc/List>

namespace cc {
namespace ui {

class FontManager;

class FontFamily: public Object
{
public:
    String name() const { return name_; }
    Pitch pitch() const { return pitch_; }

    List< Ref<const FontFace> > fontFaces() const { return fontFaces_; }

    const FontFace *selectFontFace(
        Weight weight = Weight::Normal,
        Slant slant = Slant::Normal,
        Stretch stretch = Stretch::Normal
    ) const;

private:
    friend class FontManager;

    static Ref<FontFamily> create(const String &name, Pitch pitch) {
        return new FontFamily{name, pitch};
    }

    FontFamily(const String &name, Pitch pitch);
    ~FontFamily();

    String name_;
    Pitch pitch_;
    List< Ref<const FontFace> > fontFaces_;
};

}} // namespace cc::ui
