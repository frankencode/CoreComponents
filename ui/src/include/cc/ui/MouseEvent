/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/types>

namespace cc {
namespace ui {

class MouseEvent: public Object
{
public:
    PointerAction action() const { return action_; }
    double time() const { return time_; }
    bool isSynthetic() const { return isSynthetic_; }
    MouseButton button() const { return button_; }
    int clickCount() const { return clickCount_; }
    Pos pos() const { return pos_; }
    Step step() const { return step_; }

private:
    friend class Object;
    friend class View;

    MouseEvent(
        PointerAction action,
        double time,
        bool isSynthetic,
        MouseButton button,
        int clickCount,
        Pos pos,
        Step step
    ):
        action_(action),
        time_(time),
        isSynthetic_(isSynthetic),
        button_(button),
        clickCount_(clickCount),
        pos_(pos),
        step_(step)
    {}

    PointerAction action_;
    double time_;
    bool isSynthetic_;
    MouseButton button_;
    int clickCount_;
    Pos pos_;
    Step step_;
};

}} // namespace cc::ui
