/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Property>
#include <cc/SpinLock>
#include <cc/ui/TextStyle>

namespace cc {
namespace ui {

class StyleManager;

class StylePlugin: public Object
{
public:
    static StylePlugin *instance();

    Property< Ref<const TextStyle> > defaultTextStyle; // TODO: remove
    Property< Ref<const TextStyle> > defaultMonoTextStyle; // TODO: remove
    Property< Ref<const TextStyle> > defaultMonoBoldTextStyle; // TODO: remove
    Property<Size> defaultTextMargin; // TODO: replace by a getter function

    inline String name() const { return name_; }

    String defaultFontFamily() const { return defaultFontFamily_; }
    String defaultFixedFontFamily() const { return defaultFixedFontFamily_; }
    double defaultFontSize() const { return defaultFontSize_; }
    double defaultFixedFontSize() const { return defaultFixedFontSize_; }

protected:
    friend class StyleManager;
    friend class Object;

    StylePlugin(String name);

    void setDefaultFontFamily(String name) { defaultFontFamily_ = name; }
    void setDefaultFixedFontFamily(String name) { defaultFixedFontFamily_ = name; }
    void setDefaultFontSize(double size) { defaultFontSize_ = size; }
    void setDefaultFixedFontSize(double size) { defaultFixedFontSize_ = size; }

    virtual void activate() = 0;

private:
    void init();

    String name_;
    String defaultFontFamily_;
    String defaultFixedFontFamily_;
    double defaultFontSize_;
    double defaultFixedFontSize_;
};

}} // namespace cc::ui
