/*
 * Copyright (C) 2017-2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/Font>

namespace cc {
namespace ui {

class TextStyle: public Object
{
public:
    static Ref<TextStyle> create(const Font *font, Color color = Color{})
    {
        return new TextStyle(font, color, TextDecoration::None);
    }

    static Ref<TextStyle> create(const Font *font, TextDecoration decoration, Color color = Color{})
    {
        return new TextStyle(font, color, decoration);
    }

    const Font *font() const { return font_; }
    Color color() const { return color_; }
    TextDecoration decoration() const { return decoration_; }

    Ref<TextStyle> copy() const { return new TextStyle(font_, color_, decoration_); }

    String toString() const;

private:
    TextStyle(const Font *font, Color color, TextDecoration decoration):
        font_(font),
        color_(color),
        decoration_(decoration)
    {}

    Ref<const Font> font_;
    Color color_;
    TextDecoration decoration_;
};

}} // namespace cc::ui
