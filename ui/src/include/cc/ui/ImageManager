/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/ImagePlugin>
#include <cc/ui/Image>
#include <cc/Map>
#include <cc/Source>

namespace cc { template<typename> class Singleton; }

namespace cc {
namespace ui {

class ImageManager: public Object
{
public:
    static ImageManager *instance();

    bool getPlugin(const String &name, const ImagePlugin **plugin) const;
    Ref< Source<const ImagePlugin *> > getAllPlugins() const;

    Image load(const String &uri, unsigned index = 0) const;

private:
    friend class Singleton<ImageManager>;
    friend class ImagePlugin;

    ImageManager();
    void registerPlugin(ImagePlugin *plugin);

    using Plugins = Map< String, Ref<ImagePlugin> >;
    Plugins plugins_;
};

}} // namespace cc::ui
