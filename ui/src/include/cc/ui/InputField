/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/InputControl>

namespace cc {
namespace ui {

class InputField: public Control
{
public:
    Property<string> labelText;
    Property<string> inputText;
    Property<string> dummyText;
    Property<string> helpText;
    Property<string> statusText;
    Property<string> errorText;

    #if 0
    enum class Type {
        Filled,
        Outline
    };

    Property<Type> type { Type::Filled };
    #endif

    Notifier accepted;
    Notifier rejected;

    Size preferredSize() const override;
    Size minSize() const override;
    Size maxSize() const override;

protected:
    InputField(View *parent, const string &labelText);
    void init();

    virtual InputControl *addInputControl() = 0;

    void clear() override;
    void paint() override;

private:
    void gotoNext();
    void gotoPrevious();

    InputControl *input_;
};

}} // namespace cc::ui
