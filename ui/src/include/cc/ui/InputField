/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/InputControl>

namespace cc {
namespace ui {

class InputField: public Control
{
public:
    class Instance: public Control::Instance
    {
    public:
        Property<String> labelText;
        Property<String> inputText;
        Property<String> dummyText;
        Property<String> helpText;
        Property<String> statusText;
        Property<String> errorText;

        Signal accepted;
        Signal rejected;

        Size preferredSize() const override;
        Size minSize() const override;
        Size maxSize() const override;

    protected:
        friend class InputField;

        Instance(const InputControl &input, const String &inputLabel);

        // void clear() override;

        InputControl input_ { nullptr };

    private:
        void gotoNext();
        void gotoPrevious();

        Property<double> underlineThickness;
        Property<Color> underlineInk;
    };

    InputField(Instance *instance):
        Control{instance}
    {}

    Instance *operator->() const { return my<Instance>(); }
};

}} // namespace cc::ui
