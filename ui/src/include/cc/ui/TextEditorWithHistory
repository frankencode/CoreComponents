/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/TextEditor>
#include <cc/ui/TextDelta>

namespace cc {
namespace ui {

class TextEditorWithHistory: public TextEditor
{
public:
    virtual int byteCount() const = 0;
    virtual String copy(Range range) const = 0;

    String text() const override;
    Range paste(Range range, const String &newChunk) override;

    bool canUndo() const override;
    bool canRedo() const override;;
    Range undo() override;
    Range redo() override;

protected:
    TextEditorWithHistory();

    virtual String filterChunk(const String &newChunk) const;
    virtual void pasteChunk(Range range, const String &newChunk) = 0;

    ListValue< Ref<const TextDelta> > past_;
    ListValue< Ref<const TextDelta> > future_;
};

}} // namespace cc::ui
