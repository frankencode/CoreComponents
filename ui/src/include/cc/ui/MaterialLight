/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/Theme>

namespace cc {
namespace ui {

class MaterialLight: public Theme
{
    friend class Object;

public:
    color primaryColor         () const override { return color{ Material::Blue500 }; }
    color primaryDarkColor     () const          { return 0x0069c0; }
    color primaryLightColor    () const          { return 0x6ec6ff; }
    color secondaryColor       () const override { return color{ Material::Lime500 }; }
    color secondaryDarkColor   () const          { return 0x99aa00; }
    color secondaryLightColor  () const          { return 0xffff6e; }
    color alertColor           () const override { return color{ Material::RedA400 }; }

    color statusBarColor       () const override { return color{ Material::Grey300 }; }
    color appBarColor          () const override { return color{ Material::Grey100 }; }
    color windowColor          () const override { return color{ Material::Grey50 }; }
    color popupColor           () const override { return color::white; }

    color titleTextColor       () const override { return color::white; }
    color focusTextColor       () const override { return primaryDarkColor()(87); }
    color primaryTextColor     () const override { return color::black(87); }
    color secondaryTextColor   () const override { return color::black(54); }
    color inactiveTextColor    () const override { return color::black(38); }

    color inputLineColor       () const override { return color::black(42); }
    color hoverInputLineColor  () const override { return primaryTextColor(); }
    color pressedInputLineColor() const override { return primaryDarkColor(); }
    color focusInputLineColor  () const override { return primaryDarkColor(); }
    color textCursorColor      () const override { return primaryColor(); }
    color textSelectionInk     () const override { return primaryTextColor(); }
    color textSelectionPaper   () const override { return secondaryLightColor(); }

    color inputFieldFillColor  () const override { return windowColor()->darker(5); }
    color itemHighlightColor   () const override { return windowColor()->darker(5); }

private:
    MaterialLight() = default;
};

}} // namespace cc::ui
