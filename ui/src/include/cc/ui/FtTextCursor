/*
 * Copyright (C) 2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/ui/TextCursor>

namespace cc {
namespace ui {

class FtTextRun;

class FtTextCursor: public TextCursor
{
public:
    Point posA() const override { return posA_; }
    Point posB() const override { return posB_; }
    Point advance() const override;

    int byteOffset() const override { return byteOffset_; }
    bool isValid() const override;

    int step(int steps) override;
    int lineStep(int steps) override;

    Ref<TextCursor> copy() const override;

    String toString() const;

private:
    friend class Object;
    friend class FtTextRun;

    FtTextCursor(const FtTextRun *ftTextRun = nullptr);
    FtTextCursor(const FtTextCursor *other);

    Ref<FtTextCursor> ftCopy() const;

    Ref<const FtTextRun> ftTextRun_;
    Point posA_;
    Point posB_;
    int byteOffset_;
    int runIndex_;
    int clusterIndex_;
    int glyphIndex_;
};

}} // namespace cc::ui
