/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/DragArea>

namespace cc {

/** \class ScrollBar cc/ScrollBar
  * \ingroup ui
  * \brief Scroll bar
  */
class ScrollBar final: public DragArea
{
public:
    /** Create a primordial scroll bar
      */
    ScrollBar();

    /** Create a new scroll bar of given \a orientation
      */
    explicit ScrollBar(Orientation orientation);

    /** Get a weak reference in \a self
      */
    ScrollBar &associate(Out<ScrollBar> self);

    Orientation orientation() const; ///< Get orientation
    ScrollBar &orientation(Orientation newValue); ///< %Set orientation

    double visibleOffset() const; ///< Get pane position
    ScrollBar &visibleOffset(double newValue); ///< %Set pane position
    ScrollBar &visibleOffset(Definition<double> &&f); ///< Define pane position

    double totalExtent() const; ///< Get pane size
    ScrollBar &totalExtent(double newValue); ///< %Set pane size
    ScrollBar &totalExtent(Definition<double> &&f); ///< Define pane size

    double autoHide() const; ///< Get auto hide
    ScrollBar &autoHide(bool newValue); ///< %Set auto hide
    ScrollBar &autoHide(Definition<bool> &&f); ///< Define auto hide

    double visibleExtent() const; ///< Get visible extent

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc
