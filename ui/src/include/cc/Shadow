/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/View>

namespace cc {

/** \class Shadow cc/Shadow
  * \ingroup ui
  * \brief %Shadow decoration
  * \see View::decorate()
  */
class Shadow final: public View
{
public:
    Shadow(); ///< Create a premordial shadow
    explicit Shadow(Out<Shadow> self); ///< Create new shadow

    Step offset() const; ///< Get the shadow offset
    Shadow &offset(const Step &newValue); ///< %Set the shadow offset
    Shadow &offset(Definition<Step> &&f); ///< %Define the shadow offset

    double blurRadius() const; ///< Get the blur radius
    Shadow &blurRadius(double newValue); ///< %Set the blur radius
    Shadow &blurRadius(Definition<double> &&f); ///< %Define the blur radius

    Color color() const; ///< Get the shadow color
    Shadow &color(Color newValue); ///< %Set the shadow color
    Shadow &color(Definition<Color> &&f); ///< %Define the shadow color

private:
    struct State;

    State &me();
    const State &me() const;
};

} // namespace cc
