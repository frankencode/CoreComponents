/*
 * Copyright (C) 2007-2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/toki/Style>

namespace cc::toki {

/** \internal
  * \brief Syntax highlighting palette
  */
class Palette final: public MetaObject
{
public:
    Palette() = default;
    explicit Palette(const String &path);

    Style textStyle() const;

    long count() const;
    Style at(long i) const;

    Style operator[](long i) const { return at(i); }

private:
    friend class Object;
    friend class PalettePrototype;

    struct State;

    explicit Palette(New);

    const State &me() const;
};

} // namespace cc::toki
