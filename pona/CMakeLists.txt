SET(PONA_HEADER
	atoms
	stdio
	syntax
	binary
	container
	concurrent
	network
	misc
	options.hpp
	types.hpp
	StandardStreams.hpp
	Stack.hpp
	Queue.hpp
	ByteSource.hpp
	ByteSink.hpp
	Utf8Source.hpp
	Utf8Sink.hpp
	BitSource.hpp
	BitSink.hpp
	LineSource.hpp
	LineSink.hpp
	LinePrinter.hpp
	LineParser.hpp
	Instance.hpp
	HuffmanCodec.hpp
	File.hpp
	Stream.hpp
	Mutex.hpp
	Crc32.hpp
	Variant.hpp
	Ref.hpp
	Owner.hpp
	SetNull.hpp
	ThreadLocalOwner.hpp
	TimeStamp.hpp
	Alien.hpp
	Exception.hpp
	Clock.hpp
	Heap.hpp
	Monitor.hpp
	Bouncer.hpp
	MonitorMedia.hpp
	Thread.hpp
	Condition.hpp
	Semaphore.hpp
	SharedMemory.hpp
	List.hpp
	Vector.hpp
	Random.hpp
	Syntax.hpp
	SyntaxDefinition.hpp
	SyntaxFactory.hpp
	RandomAccessMedia.hpp
	String.hpp
	Tree.hpp
	PrefixTree.hpp
	Token.hpp
	TokenFactory.hpp
	BinaryTree.hpp
	AvlTree.hpp
	KeyValuePair.hpp
	Map.hpp
	Process.hpp
	SystemStream.hpp
	FileStatus.hpp
	ProcessStatus.hpp
	SocketAddress.hpp
	FormatSpecifier.hpp
	BooleanLiteral.hpp
	IntegerLiteral.hpp
	FloatLiteral.hpp
	NumberFormatting.hpp
	PrintAndScan.hpp
	TcpStream.hpp
	TcpSocket.hpp
)

SET(PONA_SOURCE
	StandardStreams.cpp
	Stream.cpp
	LineSource.cpp
	LineSink.cpp
	LinePrinter.cpp
	LineParser.cpp
	BitSink.cpp
	BitSource.cpp
	ByteSink.cpp
	ByteSource.cpp
	Utf8Sink.cpp
	Utf8Source.cpp
	HuffmanCodec.cpp
	Bouncer.cpp
	String.cpp
	SocketAddress.cpp
	SyntaxFactory.cpp
	FormatSpecifier.cpp
	BooleanLiteral.cpp
	IntegerLiteral.cpp
	FloatLiteral.cpp
	NumberFormatting.cpp
	TcpSocket.cpp
)

SET(PONA_POSIX_SOURCE
	Posix/Exception.cpp
	Posix/SystemStream.cpp
	Posix/File.cpp
	Posix/FileStatus.cpp
	Posix/Thread.cpp
	Posix/Process.cpp
	Posix/ProcessStatus.cpp
)

SET(PONA_WINDOWS_SOURCE
	Windows/Exception.cpp
	Windows/SystemStream.cpp
	Windows/File.cpp
	Windows/FileStatus.cpp
	Windows/Thread.cpp
	Windows/ProcessToken.cpp
	Windows/ProcessToken.hpp
	Windows/Process.cpp
	Windows/ProcessStatus.cpp
	Windows/inet_ntop.c
	Windows/inet_pton.c
	Windows/WsaAwareness.cpp
	Windows/TcpStream.cpp
)

IF(UNIX)
	ADD_LIBRARY(pona
		${PONA_HEADER}
		${PONA_SOURCE}
		${PONA_POSIX_SOURCE}
	)
	IF(APPLE)
		TARGET_LINK_LIBRARIES(pona pthread)
	ELSE(APPLE)
		TARGET_LINK_LIBRARIES(pona rt pthread)
	ENDIF(APPLE)
ELSE(UNIX)
	ADD_LIBRARY(pona
		${PONA_HEADER}
		${PONA_SOURCE}
		${PONA_WINDOWS_SOURCE}
	)
	TARGET_LINK_LIBRARIES(pona winmm ws2_32)
ENDIF(UNIX)

SET_TARGET_PROPERTIES(pona PROPERTIES VERSION 0.8.0 SOVERSION 0)

INSTALL(TARGETS pona ARCHIVE DESTINATION lib LIBRARY DESTINATION lib)
