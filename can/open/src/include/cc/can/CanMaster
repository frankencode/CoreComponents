/*
 * Copyright (C) 2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/can/NetworkCommand>
#include <cc/can/CanMedia>

namespace cc {
namespace can {

class CanMaster: public Object
{
public:
    static Ref<CanMaster> create(CanMedia *media);

    /** Send a network command to request a state transition of slave node(s)
      * \param type the state transition to be requested
      * \param who node ID of the slave node (or 0 to address all slave nodes)
      */
    void issueNetworkCommand(NetworkCommand::Specifier type, int who = 0);

protected:
    CanMaster(CanMedia *media);

    CanMedia *media() const { return media_; }

private:
    Ref<CanMedia> media_;
};

}} // namespace cc::can
