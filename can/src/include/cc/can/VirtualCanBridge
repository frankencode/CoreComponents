/*
 * Copyright (C) 2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/can/CanMedia>
#include <cc/Worker>

namespace cc { class Worker; }

namespace cc {
namespace can {

class VirtualCanBridge
{
public:
    class Instance: public Object
    {
        friend class VirtualCanBridge;

        Instance(const CanMedia &mediaA, const CanMedia &mediaB);

        CanMedia mediaA_, mediaB_;
        Worker aToB_, bToA_;
    };

    VirtualCanBridge(const CanMedia &mediaA, const CanMedia &mediaB):
        instance_{new Instance{mediaA, mediaB}}
    {}

private:
    Ref<Instance> instance_;
};

}} // namespace cc::can
