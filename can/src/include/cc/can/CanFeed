/*
 * Copyright (C) 2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/can/CanMedia>

namespace cc { template<class> class Channel; }

namespace cc {
namespace can {

class CanFeed: public CanMedia
{
public:
    bool waitFrame(int timeout = -1) override;
    bool readFrame(CanFrame *frame) override;
    void feedFrame(const CanFrame *frame);
    void shutdown();

protected:
    CanFeed();
    ~CanFeed();

private:
    typedef Channel< Ref<const CanFrame> > FrameChannel;
    Ref<FrameChannel> frameChannel_;
};

}} // namespace cc::can
