/*
 * Copyright (C) 2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/can/Emission>

namespace cc {
namespace can {

class SafetyEmission: public Emission
{
public:
    static Ref<SafetyEmission> create(PeriodicEmitter *emitter, int canId, int invCanId, double interval, const String &initialData);

    const CanFrame *invFrame() const { return invFrame_; }

    void updateData(const String &data) override;

private:
    SafetyEmission(int canId, int invCanId, double interval);

    void generate(CanMedia *media) override;

    Ref<CanFrame> invFrame_;
};

}} // namespace cc::can
