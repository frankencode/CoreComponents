/*
 * Copyright (C) 2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/CanFrame>
#include <cc/Object>

namespace cc {

/** \class CanAnnotator cc/CanAnnotator
  * \ingroup can
  * \brief Annotate individual CAN frames
  */
class CanAnnotator: public Object
{
public:
    CanAnnotator() = default;

    String annotate(const CanFrame &frame)
    {
        return me().annotate(frame);
    }

protected:
    struct State: public Object::State
    {
        virtual String annotate(const CanFrame &frame) = 0;
    };

    explicit CanAnnotator(State *newState):
        Object{newState}
    {}

    State &me() { return Object::me.as<State>(); }
};

} // namespace cc
