/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Object>
#include <cc/String>

namespace cc::j1939 {

class FunctionId;

/** \class IndustryInfo cc/j1939/IndustryInfo
  * \brief Information about an industry group
  */
class IndustryInfo final: public Object
{
public:
    /** Create new industry group information
      */
    explicit IndustryInfo(const String &name):
        Object{new State{name}}
    {}

    /** Read industry group information of \a functionId
      */
    explicit IndustryInfo(FunctionId functionId);

    /** Name of the industry group
      */
    String name() const
    {
        return me().name_;
    }

private:
    struct State final: public Object::State
    {
        State(const String &name):
            name_{name}
        {}

        String name_;
    };

    const State &me() const { return Object::me.as<State>(); }
};

} // namespace cc::j1939
