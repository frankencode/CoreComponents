/*
 * Copyright (C) 2019-2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/can_open/sdo/BlockReply>

namespace cc::can_open::sdo {

class BlockWriteEndReply final: public BlockReply
{
public:
    static const char *typeName() { return "can_open.sdo.block_write_end_reply"; }

    static CanFrame createFrame(int serverId);

    explicit BlockWriteEndReply(const CanFrame &frame):
        BlockReply{frame}
    {}

    bool isValid() const
    {
        return
            BlockReply::isValid() &&
            BlockReply::specifier() == BlockReply::Specifier::BlockWriteEnd;
    }

    explicit operator bool() const { return isValid(); }

    String toString() const;
};

} // namespace cc::can_open::sdo
