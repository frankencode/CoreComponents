/*
 * Copyright (C) 2019-2024 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/can_open/sdo/BlockRequest>

namespace cc::can_open::sdo {

class BlockReadEndRequest final: public BlockRequest
{
public:
    static constexpr const char *typeName() { return "can_open.sdo.block_read_end_request"; }

    static CanFrame createFrame(int serverId);

    explicit BlockReadEndRequest(const CanFrame &frame):
        BlockRequest{frame}
    {}

    explicit operator bool() const { return isValid(); }

    bool isValid() const
    {
        return
            BlockRequest::isValid() &&
            BlockRequest::specifier() == BlockRequest::Specifier::BlockReadEnd;
    }

    String toString() const;
};

} // namespace cc::can_open::sdo
