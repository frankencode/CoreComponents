/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/isobus/pd/TechnicalMessage>

namespace cc::isobus::pd {

/** \class VersionRequest cc/isobus/pd/VersionRequest
  * \brief Request version of task controller, data logger, client
  */
class VersionRequest final: public TechnicalMessage
{
public:
    /** Short name of this message
      */
    static constexpr const char *shortName() { return "isobus.pd.version_request"; }

    /** Create an interpretation of \a frame
      */
    explicit VersionRequest(const CanFrame &frame):
        TechnicalMessage{frame}
    {}

    /** Check validity
      */
    bool isValid() const
    {
        return
            TechnicalMessage::isValid() &&
            TechnicalMessage::type() == TechnicalMessage::Type::VersionRequest;
    }

    /** Check validity
      */
    explicit operator bool() const
    {
        return isValid();
    }

    /** Stringify to JSON
      */
    String toString() const;
};

String str(const VersionRequest &message) { return message.toString(); }

} // namespace cc::isobus::pd
