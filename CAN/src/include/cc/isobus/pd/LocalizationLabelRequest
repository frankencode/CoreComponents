/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/isobus/pd/LabelMessage>

namespace cc::isobus::pd {

/** \class LocalizationLabelRequest cc/isobus/pd/LocalizationLabelRequest
  * \brief %Request for the Localization Label
  */
class LocalizationLabelRequest: public LabelMessage
{
public:
    /** Create an interpretation of \a frame
      */
    explicit LocalizationLabelRequest(const CanFrame &frame):
        LabelMessage{frame}
    {}

    /** Check validity
      */
    bool isValid() const
    {
        return
            DeviceDescriptionMessage::isValid() &&
            DeviceDescriptionMessage::type() == Type::LocalizationLabelRequest;
    }

    /** Check validity
      */
    explicit operator bool() const
    {
        return isValid();
    }
};

inline String str(const LocalizationLabelRequest &message) { return message.toString(); }

} // namespace cc::isobus::pd
