/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/isobus/pd/DeviceDescriptionDatagram>

namespace cc::isobus::pd {

/** \class ObjectPoolTransferDatagram cc/isobus/pd/ObjectPoolTransferDatagram
  * \brief Object pool transfer message
  */
class ObjectPoolTransferDatagram final: public DeviceDescriptionDatagram
{
public:
    /** Create an interpretation of datagram \a message
      */
    explicit ObjectPoolTransferDatagram(const j1939::Datagram &message):
        DeviceDescriptionDatagram{message}
    {}

    /** Check validity
      */
    bool isValid() const
    {
        return
            DeviceDescriptionDatagram::isValid() &&
            DeviceDescriptionDatagram::type() == DeviceDescriptionDatagram::Type::ObjectPoolTransfer;
    }

    /** Check validity
      */
    explicit operator bool() const
    {
        return isValid();
    }

private:
    void printValue(Format &f) const override;
};

} // namespace cc::isobus::pd
