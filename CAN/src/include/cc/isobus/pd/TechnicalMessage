/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/isobus/pd/Message>

namespace cc::isobus::pd {

/** \class TechnicalMessage cc/isobus/pd/TechnicalMessage
  * \brief Query version information, capabilities, etc.
  */
class TechnicalMessage: public Message
{
public:
    /** Create an interpretation of \a frame
      */
    explicit TechnicalMessage(const CanFrame &frame):
        Message{frame}
    {}

    /** Check validity
      */
    bool isValid() const
    {
        return
            Message::isValid() &&
            Message::type() == Message::Type::QueryCapabilities;
    }

    /** Check validity
      */
    explicit operator bool() const
    {
        return isValid();
    }

    /** Technical data message type
      */
    enum class Type: uint8_t
    {
        VersionRequest = 0,
        VersionReply   = 1,
        TaskControllerIdentity = 2
    };

    /** Technical message type
      */
    Type type() const
    {
        return static_cast<Type>(Message::subType());
    }
};

} // namespace cc::isobus::pd
