/*
 * Copyright (C) 2023 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/isobus/pd/Dictionary>
#include <cc/j1939/MessageDictionary>
#include <cc/j1939/SubsystemDictionary>
#include <cc/j1939/VendorDictionary>
#include <cc/j1939/IndustryDictionary>
#include <cc/Singleton>

namespace cc::isobus {

/** \class DictionaryManager cc/DictionaryManager
  * \brief Provide centralized access to cached CAN dictionaries
  */
class DictionaryManager final: public Singleton
{
public:
    /** Get access to the singleton object
      */
    DictionaryManager();

    /** Directory path where dictionaries are read from
      */
    String dataPath() const;

    /** \copybrief isobus::pd::Dictionary
      */
    const isobus::pd::Dictionary &processDataDictionary() const;

    /** \copybrief j1939::MessageDictionary
      */
    const j1939::MessageDictionary &messageTypeDictionary() const;

    /** \copybrief j1939::SubsystemDictionary
      */
    const j1939::SubsystemDictionary &subsystemDictionary() const;

    /** \copybrief j1939::VendorDictionary
      */
    const j1939::VendorDictionary &vendorDictionary() const;

    /** \copybrief j1939::IndustryDictionary
      */
    const j1939::IndustryDictionary &industryDictionary() const;

private:
    struct State;

    const State &me() const;
};

} // namespace cc::isobus
