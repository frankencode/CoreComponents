/*
 * Copyright (C) 2021 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/TlsClientOptions>
#include <cc/TlsStream>
#include <cc/TlsCertificateError>
#include <cc/Fun>

namespace cc {

/** \class TlsClientStream cc/TlsClientStream
  * \ingroup tls
  * \brief %Client-side TLS stream
  * \exception TlsError
  * \exception TlsCertificateError
  * \exception SystemError
  */
class TlsClientStream final: public TlsStream
{
public:
    /** Create a null client-side TLS stream
      */
    TlsClientStream() = default;

    /** Open a new client-side TLS stream
      * \param stream Underlying transport stream
      * \param options %Client credentials and connection parameters (optional)
      * \note This constructor blocks until the stream becomes ready.
      */
    TlsClientStream(const Stream &stream, const TlsClientOptions &options = TlsClientOptions{});

    /** %Set TLS warning callback to \a f
      */
    void onTlsWarning(Fun<void(const char *errorName)> &&f);

private:
    struct State;

    State &me();
};

} // namespace cc
