/*
 * Copyright (C) 2021 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/TlsError>
#include <cc/Object>

namespace cc {

/** \class TlsClientOptions cc/TlsClientOptions
  * \ingroup tls
  * \brief TLS client credentials and connection parameters
  */
class TlsClientOptions final: public Object
{
public:
    /** Create primordial security credentials
      */
    TlsClientOptions() = default;

    /** Provide the server name the client is expecting to connect to
      */
    void setServerName(const String &serverName);

    /** %Set client authetification credentials
      * \param certPath %Certificate file path
      * \param keyPath %Private key file path
      */
    void setCredentials(const String &certPath, const String &keyPath);

    /** %Set custom trust file path
      */
    void setTrustFilePath(const String &filePath);

    /** %Set allowed ciphers
      */
    void setCiphers(const String &ciphers);

    /** Server name the client is expecting to connect to
      */
    String serverName() const;

    /** Certificate file path for client authentification
      */
    String certPath() const;

    /** Private key for client authentification
      */
    String keyPath() const;

    /** Custome trust file path
      */
    String trustFilePath() const;

    /** Allowed ciphers
      */
    String ciphers() const;

private:
    friend class TlsClientStream;

    struct State;

    State *operator->() { return &me(); }

    State &me();
    const State &me() const;
};

} // namespace cc
