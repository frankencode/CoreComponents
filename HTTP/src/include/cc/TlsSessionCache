/*
 * Copyright (C) 2021 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the GNU General Public License version 3
 * (see CoreComponents/LICENSE-gpl-3.0).
 *
 */

#pragma once

#include <cc/Object>
#include <cc/Array>
#include <cc/Fun>
#include <gnutls/gnutls.h>

namespace cc {

class NodeConfig;

/** \internal
  * \class TlsSessionCache cc/TlsSessionCache
  * \ingroup tls
  * \brief TLS session key caching and resumption key refresh logic
  */
class TlsSessionCache final: public Object
{
public:
    TlsSessionCache() = default;

    explicit TlsSessionCache(double refreshInterval, Fun<void(const Bytes)> &&onKeyRefresh);

    void prepareSessionResumption(gnutls_session_t session);

private:
    struct State;

    State &me();
};

} // namespace cc
