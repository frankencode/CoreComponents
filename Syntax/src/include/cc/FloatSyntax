/*
 * Copyright (C) 2021 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/SyntaxDefinition>

namespace cc {

/** \class FloatSyntax cc/FloatSyntax
  * \ingroup syntax
  * \brief C-style floating point literals
  * \see readNumber()
  */
class FloatSyntax final: public SyntaxDefinition
{
public:
    /** Get an instance of this syntax definition
      */
    FloatSyntax();

    /** Read a floating point literal
      * \param value Returns the value
      * \param text The text to read
      * \param token %Production generated from this definition
      */
    void read(Out<double> value, const String &text, const Token &token) const;

    /** Read a floating point literal
      * \param value Returns the value
      * \param text The text to read
      * \param offset &Byte offset within the text
      * \return %Syntax production
      */
    Token read(Out<double> value, const String &text, double offset) const;

private:
    struct State;

    const State &me() const;
};

} // namespace cc
