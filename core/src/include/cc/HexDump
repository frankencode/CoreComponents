/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \class HexDump cc/HexDump
  * \brief Hexdumping data sink
  *
  * Example usage:
  * ~~~~~~~~~~~~~
  * File{"test.dat"}->transferTo(HexDump{stdOut()});
  * ~~~~~~~~~~~~~
  *
  * \see StreamTap
  */
class HexDump: public Stream
{
public:
    class Instance: public Stream::Instance
    {
    public:
        void write(const CharArray *data) override;

    private:
        friend class HexDump;

        Instance(const Stream &sink);
        ~Instance();

        void writeByte(uint8_t ch);
        void flush();

        Stream sink_;
        off_t offset_;
        String buffer_;
        int i_;
    };

    /** Open a new hexdump sink
      * \param sink where the hexdump is written to (defaults to stdOut())
      */
    HexDump(const Stream &sink = Stream{}):
        Stream{new Instance{sink}}
    {}
};

/** Convert binary data into a hexdump
  * \param data binary data
  * \return hexdump
  */
String hexDump(const CharArray *data);

} // namespace cc
