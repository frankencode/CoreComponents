/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

namespace cc {

/** Translate from the RGB to the HSV color space
  * \param r red in range [0, 1]
  * \param g green in range [0, 1]
  * \param b blue in range [0, 1]
  * \param h returns the hue in range [0, 360)
  * \param s returns the saturation in range [0, 1]
  * \param v returns the value in range [0, 1]
  */
void rgbToHsv(double r, double g, double b, double *h, double *s, double *v);

/** Translate from the HSV to the RGB color space
  * \param h hue in range [0, 360]
  * \param s saturation in range [0, 1]
  * \param v value in range [0, 1]
  * \param r returns red in range [0, 1]
  * \param g returns green in range [0, 1]
  * \param b returns blue in range [0, 1]
  */
void hsvToRgb(double h, double s, double v, double *r, double *g, double *b);

/** Translate from the RGB to the HSL color space
  * \param r red in range [0, 1]
  * \param g green in range [0, 1]
  * \param b blue in range [0, 1]
  * \param h returns the hue in range [0, 360)
  * \param s returns the saturation in range [0, 1]
  * \param l returns the luminance in range [0, 1]
  */
void rgbToHls(double r, double g, double b, double *h, double *l, double *s);

/** Translate from the HSL to the RGB color space
  * \param h hue in range [0, 360]
  * \param s saturation in range [0, 1]
  * \param l luminance in range [0, 1]
  * \param r returns red in range [0, 1]
  * \param g returns green in range [0, 1]
  * \param b returns blue in range [0, 1]
  */
void hlsToRgb(double h, double l, double s, double *r, double *g, double *b);

} // namespace cc
