/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Source>
#include <cc/Plugin>

namespace cc {

template<typename, typename> class Map;

class PluginDir: public Object
{
public:
    static Ref<PluginDir> open(const string &path);

    string path() const;
    Ref< Source<const Plugin *> > getLoadedPlugins() const;

protected:
    virtual void onLoaded(Plugin *plugin) {}
    virtual void onLoadError(const string &pluginPath, const string &errorMessage);

private:
    PluginDir(const string &path);
    ~PluginDir();
    PluginDir *open();

    string path_;
    typedef Map<string, Ref<Plugin> > PluginByName;
    Ref<PluginByName> loadedPlugins_;
};

} // namespace cc
