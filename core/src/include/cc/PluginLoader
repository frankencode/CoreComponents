/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/String>

#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif
#include <dlfcn.h>

namespace cc {

/** \class PluginLoader cc/PluginLoader
  * \ingroup plugins
  * \brief %Plugin loading during library initialization
  */
class PluginLoader
{
public:
    explicit PluginLoader(const String &libraryPath, const String &group = "");
    PluginLoader(const String &libraryPath, const List<String> groups);
};

#define CC_PLUGIN_LOADER \
inline const char *getLibraryPath() \
{ \
    Dl_info info; \
    dladdr((void *)getLibraryPath, &info); \
    return info.dli_fname; \
} \
namespace { \
    PluginLoader pluginLoader{getLibraryPath()}; \
}

#define CC_PLUGIN_GROUP_LOADER(group) \
inline const char *group ## getLibraryPath() \
{ \
    Dl_info info; \
    dladdr((void *)group ## getLibraryPath, &info); \
    return info.dli_fname; \
} \
namespace { \
    PluginLoader group ## pluginLoader{group ## getLibraryPath(), CC_XSTR(group)}; \
}

#define CC_PLUGIN_TARGET \
inline const char *pluginTarget() \
{ \
    Dl_info info; \
    dladdr((void *)pluginTarget, &info); \
    return info.dli_fname; \
}

} // namespace cc
