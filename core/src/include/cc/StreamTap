/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \brief Bi-directional traffic redirection and duplication
  */
class StreamTap: public Stream
{
public:
    class Instance: public Stream::Instance
    {
    public:
        int read(CharArray *data) override;
        void write(const CharArray *data) override;
        void write(const StringList &parts) override;

    private:
        friend class StreamTap;

        Instance(const Stream &stream, const Stream &inputTap, const Stream &outputTap);

        Stream stream_, inputTap_, outputTap_;
    };

    StreamTap(const Stream &stream, const Stream &inputTap, const Stream &outputTap):
        Stream{new Instance{stream, inputTap, outputTap}}
    {}
};

} // namespace cc
