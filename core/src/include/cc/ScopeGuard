/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <functional>

namespace cc {

/** \class ScopeGuard cc/ScopeGuard
  * \ingroup basics
  * \brief Call cleanup function on scope exit
  */
class ScopeGuard
{
public:
    /** Post scope guard \a cleanup function
      */
    ScopeGuard(std::function<void()> &&cleanup): cleanup_{cleanup} {}

    /** Disband scope guard: call \a cleanup function
      */
    ~ScopeGuard() { cleanup_(); }

private:
    std::function<void()> cleanup_;
};

} // namespace cc
