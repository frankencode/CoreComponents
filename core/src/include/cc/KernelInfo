/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/String>
#include <cc/SystemError>
#include <cc/Singleton>

namespace cc {

/** \class KernelInfo cc/KernelInfo
  * \ingroup sysinfo
  * \brief Query information about the operating system kernel
  * \exception SystemError
  */
class KernelInfo final: public Singleton
{
public:
    /** Obtain kernel information
      */
    KernelInfo();

    /** Operating system name
      */
    String name() const { return me().name_; }

    /** Release version
      */
    String release() const { return me().release_; }

    /** Detailed build information
      */
    String version() const { return me().version_; }

    /** %System architecture
      */
    String machine() const { return me().machine_; }

private:
    struct State: public Singleton::State
    {
        State();
        String name_;
        String release_;
        String version_;
        String machine_;
    };

    const State &me() const { return Object::me.as<State>(); }
};

} // namespace cc
