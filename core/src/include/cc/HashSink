/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \class HashSink cc/HashSink
  * \brief Hashsum computing sink
  */
class HashSink: public Stream
{
public:
    class Instance: public Stream::Instance
    {
    public:
        /// Finish hash sum computation and return the result
        virtual String finish() = 0;
    };

    HashSink() = default;

    Instance *operator->() const { return my<Instance>(); }

protected:
    HashSink(Instance *instance):
        Stream{instance}
    {}
};

} // namespace cc
