/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <sys/types.h>
#include <pwd.h>
#include <cc/string>

namespace cc {

/** \class User cc/User
  * \ingroup sysinfo
  * \brief Query information about system users
  * \see Group
  */
class User: public Object
{
public:
    /** Lookup user information by user ID
      * \param id system user ID
      * \return new object instance
      */
    static Ref<User> lookup(uid_t id) {
        return new User{id};
    }

    /** Lookup user information by user name
      * \param name login name
      * \return new object instance
      */
    static Ref<User> lookup(const string &name) {
        return new User{name};
    }

    /// True if queried user exists on the system
    bool isValid() const { return isValid_; }

    uid_t id() const { return id_; } ///< user ID
    gid_t groupId() const { return groupId_; } ///< primary group ID
    string name() const { return loginName_; } ///< login name
    string loginName() const { return loginName_; } ///< login name
    string fullName() const { return fullName_; } ///< real name
    string home() const { return home_; } ///< home directory path
    string shell() const { return shell_; } ///< login shell of the user

private:
    User(uid_t id);
    User(const string &name);

    void load(struct passwd *entry);
    bool isValid_;
    uid_t id_;
    gid_t groupId_;
    string loginName_;
    string fullName_;
    string home_;
    string shell_;
};

} // namespace cc
