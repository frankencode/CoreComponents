/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \class NullStream cc/NullStream
  * \ingroup binary_io
  * \brief Zero storage information dump
  */
class NullStream: public Stream
{
public:
    class Instance: public Stream::Instance
    {
    public:
        int read(CharArray *data) override
        {
            data->fill(0);
            return data->count();
        }

        void write(const CharArray *data) override
        {}

        void write(const StringList &parts) override
        {}

        bool isReadOnly() const override
        {
            return true;
        }

    private:
        friend class NullStream;

        Instance() = default;
    };

    NullStream():
        Stream{instance()}
    {}

private:
    static Instance *instance()
    {
        static thread_local Instance instance_;
        return &instance_;
    }
};

} // namespace cc
