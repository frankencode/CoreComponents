/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>

namespace cc {

/** \class MemoryStream cc/MemoryStream
  * \ingroup binary_io
  * \brief Read/write data from/to a memory buffer
  * \see ReplaySource, CaptureSink
  */
class MemoryStream: public Stream
{
public:
    class Instance: public Stream::Instance
    {
    public:
        int read(CharArray *data) override;
        void write(const CharArray *data) override;

    private:
        friend class MemoryStream;

        Instance(CharArray *buffer);

        String buffer_;
        int i_;
    };

    MemoryStream(CharArray *buffer):
        Stream{new Instance{buffer}}
    {}
};

} // namespace cc
