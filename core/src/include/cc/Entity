/*
 * Copyright (C) 2022 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Object>
#include <cc/Pointer>
#include <cc/Set>

namespace cc {

/** \class Entity cc/Entity
  * \ingroup objects
  * \brief Object which supports weak references
  * \see Pointer
  * An Entity is an object which can be pointed to by a Pointer.
  */
class Entity: public Object
{
protected:
    /** \brief Internal state
      */
    struct State: public Object::State
    {
    public:
        State() = default;
        ~State();

    private:
        Set<VoidPointer> pointers_;
    };

    /** Create a null entity
      */
    Entity() = default;

    /** Create a new entity
      */
    explicit Entity(State *newState):
        Object{newState}
    {}
};

} // namespace cc
