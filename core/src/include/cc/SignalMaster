/*
 * Copyright (C) 2007-2018 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <functional>
#include <cc/Thread>
#include <cc/Channel>
#include <cc/SignalSet>

namespace cc {

/** \class SignalMaster cc/SignalMaster
  * \brief Signal handling thread in a mulithreaded application
  */
class SignalMaster: public Thread
{
public:
    typedef std::function<void(Signal, bool *)> SignalHandler;

    static Ref<SignalMaster> start(const SignalHandler &handler);

private:
    SignalMaster(const SignalHandler &handler);

    virtual void run();

    SignalHandler handler_;
};

} // namespace cc
