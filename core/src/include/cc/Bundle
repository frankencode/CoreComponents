/*
 * Copyright (C) 2020 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/String>

/** Lookup a path of a bundled ressource
  * \ingroup sysinfo
  */
#define CC_BUNDLE_LOOKUP(relPath) \
    cc::Bundle::lookup( \
        relPath, \
        cc::List<String>{ \
            cc::Bundle::prefix(CC_XSTR(CCBUILD_BUNDLE_PREFIX)), \
            cc::Bundle::exePrefix(), \
            cc::String{__FILE__}.cdUp() \
        } \
    )

/** Version of this application or library bundle (low-level C String)
  */
#define CC_BUNDLE_VERSION CC_XSTR(CCBUILD_BUNDLE_VERSION)

namespace cc {

template<class>
class Singleton;

/** \class Bundle cc/Bundle
  * \ingroup sysinfo
  * \brief Lookup files in installation directories
  */
class Bundle
{
public:
    static String lookup(const String &relPath, const List<String> &dirs);
    static String prefix(const char *defaultPrefix);
    static String exePrefix();

private:
    static Bundle &instance();
    Bundle();
    String overridePrefix_;
    String exePrefix_;
};

} // namespace cc
