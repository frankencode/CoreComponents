/*
 * Copyright (C) 2007-2017 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/Stream>
#include <cc/http/HttpMessage>

namespace cc { class LineSource; }

namespace cc {
namespace http {

class HttpStream;

/** \brief logical HTTP connection end
  */
class HttpConnection: public Object
{
public:
    Stream *stream() const { return stream_; }

    void setupTransferLog(Stream *debugStream, String label);

    bool isPayloadConsumed() const;

protected:
    HttpConnection(Stream *stream);
    ~HttpConnection() override;

    void readMessage(HttpMessage *message);
    virtual void readFirstLine(LineSource *source, HttpMessage *message) {}
    virtual void onHeaderReceived(HttpMessage *message) {}

    Ref<HttpStream> httpStream_;
    Ref<Stream> stream_;
    String lineBuffer_;
};

}} // namespace cc::http
