/*
 * Copyright (C) 2007-2019 Frank Mertens.
 *
 * Distribution and use is allowed under the terms of the zlib license
 * (see cc/LICENSE-zlib).
 *
 */

#pragma once

#include <cc/http/HttpMessage>
#include <cc/http/HttpStream>

namespace cc { class LineSource; }

namespace cc {
namespace http {

class HttpStream;

/** \brief logical HTTP connection end
  */
class HttpConnection: public Object
{
public:
    Stream stream() const { return stream_; }

    void setupTransferLog(const Stream &debugStream, const String &label);

    bool isPayloadConsumed() const;

protected:
    HttpConnection(const Stream &stream);
    ~HttpConnection() override;

    void readMessage(HttpMessage *message);
    virtual void readFirstLine(LineSource &source, HttpMessage *message) {}
    virtual void onHeaderReceived(HttpMessage *message) {}

    HttpStream httpStream_;
    Stream stream_;
    String lineBuffer_;
};

}} // namespace cc::http
