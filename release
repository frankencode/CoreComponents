#! /bin/bash

TOOL=$(basename $0)

if test $# -ne 1; then
    echo "Usage: $TOOL <version>"
    echo "Create a new source release package"
    exit 1
fi

set -o pipefail
set -o errexit

VERSION=$1
SOURCE=$(realpath $(dirname $0))
PACKAGE=$(basename $SOURCE)

#echo "Check Recipe version..."
#if ! cat $SOURCE/Recipe|grep $VERSION; then
#    echo "Version mismatch, update Recipe!"
#    exit 1
#fi

echo "Update bootstrap file..."
rm -rf /tmp/cc_bootstrap
mkdir -p /tmp/cc_bootstrap
pushd /tmp/cc_bootstrap
if uname -o|grep Cygwin; then
    BOOTSTRAP=bootstrap-cygwin
else
    BOOTSTRAP=bootstrap
fi
# echo "Generating bootstrap script... (don't forget to optimize for target!-)"
#ccbuild -bootstrap -release -lump $SOURCE/tools/build > $SOURCE/tools/build/$BOOTSTRAP
# -optimize=0
#chmod +x $SOURCE/tools/build/$BOOTSTRAP
echo "FIXME: bootstrap generation disabled!"
popd

echo "Create source tarball..."
pushd $SOURCE/..
rm -rf $PACKAGE-$VERSION
cp -a $PACKAGE $PACKAGE-$VERSION
pushd $PACKAGE-$VERSION
rm -rf .git || true
rm -rf .vscode || true
rm -rf $(find . -name 'compile_commands.json') || true
rm -rf $(find . -name '.cache') || true
rm -rf doc/doxygen-awesome-css/ || true
popd
ARCHIVE=$PACKAGE-$VERSION.tar.gz
HASHES=$PACKAGE-$VERSION.hash
tar -cv $PACKAGE-$VERSION | gzip --best > $ARCHIVE
printf "SHA-256\t$(ccsha2-256 $ARCHIVE)\n" > $HASHES
printf "SHA-512\t$(ccsha2-512 $ARCHIVE)\n" >> $HASHES
popd
