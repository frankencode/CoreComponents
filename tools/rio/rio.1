RIO(1)                           Misc Commands                          RIO(1)



NNAAMMEE
       rio - full-duplex network adapter

SSYYNNOOPPSSIISS
       rriioo [_O_P_T_I_O_N]... [_F_I_L_E|_P_R_O_G_R_A_M]...

DDEESSCCRRIIPPTTIIOONN
       rriioo  copies simultanously its standard input and standard output to and
       from a stream socket.  A stream socket can be established passively  or
       actively.  In passive mode rriioo functions as an iterative server listen-
       ing for connections.

       Optionally one or  more  files  passed  as  additional  parameters  are
       injected into the socket before copying standard input. In passive mode
       each connection gets served a single file iterating  through  the  _F_I_L_E
       list.  Each  file  may also be executed (--xx). In this case the standard
       input and output of the _P_R_O_G_R_A_M in execution will be copied to the con-
       nected socket.

       By  default rriioo operates in binary mode, but it can also transfer bytes
       line-vise (--aa).  In canonical mode rriioo will read and write  data  line-
       vise  and  will  automatically convert line endings from the local line
       ending style (\012) to a choosen network line ending style (\015\012 by
       default).

       If operating in canonical mode without a pipe connected to its standard
       input, rriioo will start a line editor (rriioo__rrll by default)  to  edit  each
       line  before  transmission. This allows chatting with services like FTP
       or SMTP in a comfortable manner.

OOPPTTIIOONNSS
       --server, -s
              Server mode

       --client, -c
              Client mode

       --host, -t
              Host name or address

       --port, -p
              Port number

       --inet6, -6
              Prefer IPv6

       --backlog, -b
              Backlog length of listening socket

       --canon, -b
              Line-vise I/O mode

       --editor, -e
              Line editor

       --eol, -n
              Line ending style ('crlf' or 'nl')

       --io_unit, -u
              I/O buffer size

       --quiet, -q
              Do not output any status messages

       --logging, -g
              Logging flags (connect,recv,send,merged)

       --log_dir, -d
              Target directory for log files

       --exec, -x
              Execute each [PROGRAM]

       --loop, -l
              Endless repeat serving connections

       --repeat=_N, -r=_N
              Repeat serving exactly _N connections

       --help, -h
              Print help

EEXXAAMMPPLLEESS
       Piping a file from one host to another:
              Host A: rio --server < some_file
              Host B: rio --client --host=A > some_file

       Running a HTTP logging proxy:
              Service definition (/etc/inetd.conf) on host A:
              www stream tcpnowait user /full/path/rio rio -c -t=B -p=80 -q -g=send,recv -d=/home/user/www

       Remotely working on another hosts:
              Host A: rio -sax bash
              Host B: rio -c -t=A

SSEEEE AALLSSOO
       hd(1), inetd(8), tcpdump(1), rget(1)

AAUUTTHHOORR
       Frank Mertens, frank@cyblogic.de



version 0.9.4                     03 MAY 2009                           RIO(1)
